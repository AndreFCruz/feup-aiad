/* Generated By:JJTree: Do not edit this line. ASTlist.java */

package uchicago.src.sim.parameter.rpl;

import java.util.ArrayList;
import java.util.List;
import java.util.NoSuchElementException;

public class ASTlist extends SimpleNode {

  private List list = new ArrayList();
  private RPLList rplList;

  public ASTlist(int id) {
    super(id);
  }

  public ASTlist(RPLParser p, int id) {
    super(p, id);
  }

  public void preProcess(RPLCompiler compiler) {
    for (int i = 0; i < jjtGetNumChildren(); i++) {
      list.add(jjtGetChild(i).getValue());
    }
  }

  public RPLList getRPLList() {
    return rplList;
  }

  public void compile(RPLCompiler compiler) {
    // resolve any references to the Model or java classes in the
    // list
    for (int i = 0, n = list.size(); i < n; i++) {
      RPLObject obj = (RPLObject) list.get(i);
      obj.compile(compiler);
    }

    // turn the list of RPLObjects into an RPLList.
    try {
      rplList = RPLFactory.createRPLList(list);
    } catch (ClassCastException ex) {
      String message = "list elements must be of the same type or convertibe to the same type.";
      ex.printStackTrace();
      throw compiler.createCompilerException(message, this.beginLine);

    } catch (NoSuchElementException ex) {
      String message = "list cannot be empty.";
      throw compiler.createCompilerException(message, this.beginLine);
    }
  }
}
