/* Generated By:JJTree: Do not edit this line. ASTparam_assign.java */

package uchicago.src.sim.parameter.rpl;

public class ASTparam_assign extends SimpleNode {

  private String varName;

  public ASTparam_assign(int id) {
    super(id);
  }

  public ASTparam_assign(RPLParser p, int id) {
    super(p, id);
  }

  public void preProcess(RPLCompiler compiler) {
    varName = (String) children[0].getInfo();
    ASTParameter p = (ASTParameter) children[1];
    p.preProcess(compiler);

  }

  public void compile(RPLCompiler compiler) {
    ASTParameter p = (ASTParameter) children[1];
    p.compile(compiler);
    if (compiler.hasGlobalVariable(varName)) {
      String message = "variable '" + varName + "' is already defined";
      throw compiler.createCompilerException(message, this.beginLine);
    }

    String paramName = p.getName();

    if (!compiler.isModelParameter(paramName)) {
      String message = "parameter '" + paramName + "' not found in the model";
      throw compiler.createCompilerException(message, this.beginLine);
    }

    if (compiler.hasParameterName(paramName)) {
      String message = "duplicate definition of constant or parameter for '" + paramName + "'";
      throw compiler.createCompilerException(message, this.beginLine);
    }

    RPLParameter rplParameter = p.getRPLParameter();
    compiler.addGlobalVar(varName, rplParameter);
    compiler.addParameter(varName, rplParameter);
    compiler.addParameterName(paramName);

    //System.out.println(varName + " = " + rplParameter);
  }
}
