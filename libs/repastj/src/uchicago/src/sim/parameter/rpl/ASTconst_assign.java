/* Generated By:JJTree: Do not edit this line. ASTconst_assign.java */

package uchicago.src.sim.parameter.rpl;

public class ASTconst_assign extends SimpleNode {

  private String varName;

  public ASTconst_assign(int id) {
    super(id);
  }

  public ASTconst_assign(RPLParser p, int id) {
    super(p, id);
  }

  public void preProcess(RPLCompiler compiler) {
    varName = (String) children[0].getInfo();
    children[1].preProcess(compiler);
  }

  public void compile(RPLCompiler compiler) {
    ASTConstant node = (ASTConstant)children[1];
    node.compile(compiler);

    String paramName = node.getName();

    if (compiler.hasGlobalVariable(varName)) {
      String message = "variable '" + varName + "' is already defined";
      throw compiler.createCompilerException(message, this.beginLine);
    }

    if (!compiler.isModelParameter(paramName)) {
      String message = "parameter '" + paramName + "' not found in the model";
      throw compiler.createCompilerException(message, this.beginLine);
    }

    if (compiler.hasParameterName(paramName)) {
      String message = "duplicate definition of constant or parameter for '" + paramName + "'";
      throw compiler.createCompilerException(message, this.beginLine);
    }

    RPLParameter p = node.getRPLConstant();
    compiler.addGlobalVar(varName, p);
    compiler.addParameterName(paramName);
    compiler.addParameter(varName, p);

    //System.out.println(varName + " = " + p);

  }
}
